{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2","program":"/home/silverysky/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","loca","/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=e672a7676b2dac8e","-C","extra-filename=-e672a7676b2dac8e","--out-dir","/home/silverysky/projects/homework2/target/rls/debug/deps","-L","dependency=/home/silverysky/projects/homework2/target/rls/debug/deps","--extern","ptr=/home/silverysky/projects/homework2/target/rls/debug/deps/libptr-d221f6a1da8d4820.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/silverysky/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/silverysky/projects/homework2/target/rls/debug/deps/libloca-e672a7676b2dac8e.rmeta"},"prelude":{"crate_id":{"name":"loca","disambiguator":[8616923278331814381,1442535884168604160]},"crate_root":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src","external_crates":[{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11947651413578653303,9125350549974577926]}},{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9117317158706016546,5535949425969621445]}},{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[2168407567314601696,8376855152256258116]}},{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","num":4,"id":{"name":"ptr","disambiguator":[15109529990841961137,3674945252023435363]}}],"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":467,"byte_end":42774,"line_start":11,"line_end":996,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":467,"byte_end":42774,"line_start":11,"line_end":996,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":94},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":113},{"krate":0,"index":112},{"krate":0,"index":110},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":16},{"krate":0,"index":115},{"krate":0,"index":129},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":120},{"krate":0,"index":35},{"krate":0,"index":40},{"krate":0,"index":131},{"krate":0,"index":141},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":133},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":143},{"krate":0,"index":151},{"krate":0,"index":150},{"krate":0,"index":148},{"krate":0,"index":146},{"krate":0,"index":70},{"krate":0,"index":73}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":467,"byte_end":477,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"feature(const_fn)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":479,"byte_end":500,"line_start":13,"line_end":13,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":94},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":778,"byte_end":784,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Excess","qualname":"::Excess","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the combination of a starting address and\n a total capacity of the returned block.\n","sig":null,"attributes":[{"value":"/ Represents the combination of a starting address and","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":649,"byte_end":705,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ a total capacity of the returned block.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":706,"byte_end":749,"line_start":22,"line_end":22,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":96},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":785,"byte_end":800,"line_start":24,"line_end":24,"column_start":19,"column_end":34},"name":"0","qualname":"::Excess::0","value":"core::ptr::NonNull<u8>","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":97},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":802,"byte_end":811,"line_start":24,"line_end":24,"column_start":36,"column_end":45},"name":"1","qualname":"::Excess::1","value":"usize","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":1453,"byte_end":1459,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"Layout","qualname":"::Layout","value":"Layout {  }","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"decl_id":null,"docs":" Layout of a block of memory.","sig":null,"attributes":[{"value":"/ Layout of a block of memory.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":815,"byte_end":847,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":848,"byte_end":851,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ An instance of `Layout` describes a particular layout of memory.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":852,"byte_end":920,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ You build a `Layout` up as an input to give to an allocator.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":921,"byte_end":985,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":986,"byte_end":989,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ All layouts have an associated non-negative size and a","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":990,"byte_end":1048,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ power-of-two alignment.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":1049,"byte_end":1076,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":1077,"byte_end":1080,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ (Note however that layouts are *not* required to have positive","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":1081,"byte_end":1147,"line_start":34,"line_end":34,"column_start":1,"column_end":67}},{"value":"/ size, even though many allocators require that all memory","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":1148,"byte_end":1209,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/ requests have positive size. A caller to the `Alloc::alloc`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":1210,"byte_end":1273,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/ method must either ensure that conditions like this are met, or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":1274,"byte_end":1341,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ use specific allocators with looser requirements.)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":1342,"byte_end":1396,"line_start":38,"line_end":38,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2597,"byte_end":2612,"line_start":72,"line_end":72,"column_start":12,"column_end":27},"name":"from_size_align","qualname":"<Layout>::from_size_align","value":"pub fn from_size_align(usize, usize) -> Option<Layout>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `Layout` from a given `size` and `align`,\n or returns `None` if any of the following conditions\n are not met:","sig":null,"attributes":[{"value":"/ Constructs a `Layout` from a given `size` and `align`,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2141,"byte_end":2199,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/ or returns `None` if any of the following conditions","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2204,"byte_end":2260,"line_start":61,"line_end":61,"column_start":5,"column_end":61}},{"value":"/ are not met:","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2265,"byte_end":2281,"line_start":62,"line_end":62,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2286,"byte_end":2289,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ * `align` must be a power of two,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2294,"byte_end":2331,"line_start":64,"line_end":64,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2336,"byte_end":2339,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ * `align` must not exceed 2^31 (i.e. `1 << 31`),","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2344,"byte_end":2396,"line_start":66,"line_end":66,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2401,"byte_end":2404,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ * `size`, when rounded up to the nearest multiple of `align`,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2409,"byte_end":2474,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/    must not overflow (i.e. the rounded value must be less than","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2479,"byte_end":2545,"line_start":69,"line_end":69,"column_start":5,"column_end":71}},{"value":"/    `usize::MAX`).","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2550,"byte_end":2571,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2576,"byte_end":2585,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":3968,"byte_end":3993,"line_start":111,"line_end":111,"column_start":25,"column_end":50},"name":"from_size_align_unchecked","qualname":"<Layout>::from_size_align_unchecked","value":"pub const unsafe fn from_size_align_unchecked(usize, usize) -> Layout","parent":null,"children":[],"decl_id":null,"docs":" Creates a layout, bypassing all checks.","sig":null,"attributes":[{"value":"/ Creates a layout, bypassing all checks.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":3586,"byte_end":3629,"line_start":102,"line_end":102,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":3634,"byte_end":3637,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":3642,"byte_end":3654,"line_start":104,"line_end":104,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":3659,"byte_end":3662,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe as it does not verify that `align` is","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":3667,"byte_end":3732,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/ a power-of-two that is also less than or equal to 2^31, nor","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":3737,"byte_end":3800,"line_start":107,"line_end":107,"column_start":5,"column_end":68}},{"value":"/ that `size` aligned to `align` fits within the address space","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":3805,"byte_end":3869,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/ (i.e. the `Layout::from_size_align` preconditions).","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":3874,"byte_end":3929,"line_start":109,"line_end":109,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":3934,"byte_end":3943,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":4201,"byte_end":4205,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"size","qualname":"<Layout>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The minimum size in bytes for a memory block of this layout.\n","sig":null,"attributes":[{"value":"/ The minimum size in bytes for a memory block of this layout.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":4111,"byte_end":4175,"line_start":115,"line_end":115,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":4180,"byte_end":4189,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":4332,"byte_end":4337,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"align","qualname":"<Layout>::align","value":"pub fn align(&Self) -> NonZeroUsize","parent":null,"children":[],"decl_id":null,"docs":" The minimum byte alignment for a memory block of this layout.\n","sig":null,"attributes":[{"value":"/ The minimum byte alignment for a memory block of this layout.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":4241,"byte_end":4306,"line_start":119,"line_end":119,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":4311,"byte_end":4320,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":4474,"byte_end":4477,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"new","qualname":"<Layout>::new","value":"pub fn new<T>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `Layout` suitable for holding a value of type `T`.\n","sig":null,"attributes":[{"value":"/ Constructs a `Layout` suitable for holding a value of type `T`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":4381,"byte_end":4448,"line_start":123,"line_end":123,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":4453,"byte_end":4462,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":4834,"byte_end":4843,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"for_value","qualname":"<Layout>::for_value","value":"pub fn for_value<T: ?Sized>(&T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produces layout describing a record that could be used to\n allocate backing structure for `T` (which could be a trait\n or other unsized type like a slice).\n","sig":null,"attributes":[{"value":"/ Produces layout describing a record that could be used to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":4635,"byte_end":4696,"line_start":130,"line_end":130,"column_start":5,"column_end":66}},{"value":"/ allocate backing structure for `T` (which could be a trait","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":4701,"byte_end":4763,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/ or other unsized type like a slice).","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":4768,"byte_end":4808,"line_start":132,"line_end":132,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":4813,"byte_end":4822,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5730,"byte_end":5738,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"name":"align_to","qualname":"<Layout>::align_to","value":"pub fn align_to(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a layout describing the record that can hold a value\n of the same layout as `self`, but that also is aligned to\n alignment `align` (measured in bytes).","sig":null,"attributes":[{"value":"/ Creates a layout describing the record that can hold a value","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5010,"byte_end":5074,"line_start":139,"line_end":139,"column_start":5,"column_end":69}},{"value":"/ of the same layout as `self`, but that also is aligned to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5079,"byte_end":5140,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/ alignment `align` (measured in bytes).","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5145,"byte_end":5187,"line_start":141,"line_end":141,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5192,"byte_end":5195,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ If `self` already meets the prescribed alignment, then returns","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5200,"byte_end":5266,"line_start":143,"line_end":143,"column_start":5,"column_end":71}},{"value":"/ `self`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5271,"byte_end":5282,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5287,"byte_end":5290,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Note that this method does not add any padding to the overall","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5295,"byte_end":5360,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/ size, regardless of whether the returned layout has a different","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5365,"byte_end":5432,"line_start":147,"line_end":147,"column_start":5,"column_end":72}},{"value":"/ alignment. In other words, if `K` has size 16, `K.align_to(32)`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5437,"byte_end":5504,"line_start":148,"line_end":148,"column_start":5,"column_end":72}},{"value":"/ will *still* have size 16.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5509,"byte_end":5539,"line_start":149,"line_end":149,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5544,"byte_end":5547,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5552,"byte_end":5564,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5569,"byte_end":5572,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Panics if the combination of `self.size` and the given `align`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5577,"byte_end":5643,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ violates the conditions listed in `from_size_align`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5648,"byte_end":5704,"line_start":154,"line_end":154,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5709,"byte_end":5718,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6716,"byte_end":6734,"line_start":177,"line_end":177,"column_start":12,"column_end":30},"name":"padding_needed_for","qualname":"<Layout>::padding_needed_for","value":"pub fn padding_needed_for(&Self, NonZeroUsize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of padding we must insert after `self`\n to ensure that the following address will satisfy `align`\n (measured in bytes).","sig":null,"attributes":[{"value":"/ Returns the amount of padding we must insert after `self`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5868,"byte_end":5929,"line_start":160,"line_end":160,"column_start":5,"column_end":66}},{"value":"/ to ensure that the following address will satisfy `align`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":5934,"byte_end":5995,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/ (measured in bytes).","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6000,"byte_end":6024,"line_start":162,"line_end":162,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6029,"byte_end":6032,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ E.g. if `self.size` is 9, then `self.padding_needed_for(4)`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6037,"byte_end":6100,"line_start":164,"line_end":164,"column_start":5,"column_end":68}},{"value":"/ returns 3, because that is the minimum number of bytes of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6105,"byte_end":6166,"line_start":165,"line_end":165,"column_start":5,"column_end":66}},{"value":"/ padding required to get a 4-aligned address (assuming that the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6171,"byte_end":6237,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"/ corresponding memory block starts at a 4-aligned address).","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6242,"byte_end":6304,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6309,"byte_end":6312,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ The return value of this function has no meaning if `align` is","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6317,"byte_end":6383,"line_start":169,"line_end":169,"column_start":5,"column_end":71}},{"value":"/ not a power-of-two.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6388,"byte_end":6411,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6416,"byte_end":6419,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that the utility of the returned value requires `align`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6424,"byte_end":6488,"line_start":172,"line_end":172,"column_start":5,"column_end":69}},{"value":"/ to be less than or equal to the alignment of the starting","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6493,"byte_end":6554,"line_start":173,"line_end":173,"column_start":5,"column_end":66}},{"value":"/ address for the whole allocated block of memory. One way to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6559,"byte_end":6622,"line_start":174,"line_end":174,"column_start":5,"column_end":68}},{"value":"/ satisfy this constraint is to ensure `align <= self.align`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6627,"byte_end":6690,"line_start":175,"line_end":175,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":6695,"byte_end":6704,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8500,"byte_end":8506,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"pad_to","qualname":"<Layout>::pad_to","value":"pub fn pad_to(&Self, NonZeroUsize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a layout padded so the following address be aligned to\n `align` (measured in bytes), assuming the memory block is also\n aligned. It is equivalent to appending an array of\n `self.padding_needed_for(align)` bytes.","sig":null,"attributes":[{"value":"/ Returns a layout padded so the following address be aligned to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":7844,"byte_end":7910,"line_start":204,"line_end":204,"column_start":5,"column_end":71}},{"value":"/ `align` (measured in bytes), assuming the memory block is also","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":7915,"byte_end":7981,"line_start":205,"line_end":205,"column_start":5,"column_end":71}},{"value":"/ aligned. It is equivalent to appending an array of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":7986,"byte_end":8040,"line_start":206,"line_end":206,"column_start":5,"column_end":59}},{"value":"/ `self.padding_needed_for(align)` bytes.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8045,"byte_end":8088,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8093,"byte_end":8096,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The return value of this function has no meaning if `align` is","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8101,"byte_end":8167,"line_start":209,"line_end":209,"column_start":5,"column_end":71}},{"value":"/ not a power-of-two.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8172,"byte_end":8195,"line_start":210,"line_end":210,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8200,"byte_end":8203,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Note that the utility of the returned value requires `align`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8208,"byte_end":8272,"line_start":212,"line_end":212,"column_start":5,"column_end":69}},{"value":"/ to be less than or equal to the alignment of the starting","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8277,"byte_end":8338,"line_start":213,"line_end":213,"column_start":5,"column_end":66}},{"value":"/ address for the whole allocated block of memory. One way to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8343,"byte_end":8406,"line_start":214,"line_end":214,"column_start":5,"column_end":68}},{"value":"/ satisfy this constraint is to ensure `align <= self.align`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8411,"byte_end":8474,"line_start":215,"line_end":215,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8479,"byte_end":8488,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":9237,"byte_end":9243,"line_start":236,"line_end":236,"column_start":12,"column_end":18},"name":"repeat","qualname":"<Layout>::repeat","value":"pub fn repeat(&Self, usize) -> Option<(Self, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Creates a layout describing the record for `n` instances of\n `self`, with a suitable amount of padding between each to\n ensure that each instance is given its requested size and\n alignment. On success, returns `(k, offs)` where `k` is the\n layout of the array and `offs` is the distance between the start\n of each element in the array.","sig":null,"attributes":[{"value":"/ Creates a layout describing the record for `n` instances of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8781,"byte_end":8844,"line_start":227,"line_end":227,"column_start":5,"column_end":68}},{"value":"/ `self`, with a suitable amount of padding between each to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8849,"byte_end":8910,"line_start":228,"line_end":228,"column_start":5,"column_end":66}},{"value":"/ ensure that each instance is given its requested size and","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8915,"byte_end":8976,"line_start":229,"line_end":229,"column_start":5,"column_end":66}},{"value":"/ alignment. On success, returns `(k, offs)` where `k` is the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":8981,"byte_end":9044,"line_start":230,"line_end":230,"column_start":5,"column_end":68}},{"value":"/ layout of the array and `offs` is the distance between the start","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":9049,"byte_end":9117,"line_start":231,"line_end":231,"column_start":5,"column_end":73}},{"value":"/ of each element in the array.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":9122,"byte_end":9155,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":9160,"byte_end":9163,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ On arithmetic overflow, returns `None`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":9168,"byte_end":9211,"line_start":234,"line_end":234,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":9216,"byte_end":9225,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":10452,"byte_end":10458,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"name":"extend","qualname":"<Layout>::extend","value":"pub fn extend(&Self, Self) -> Option<(Self, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Creates a layout describing the record for `self` followed by\n `next`, including any necessary padding to ensure that `next`\n will be properly aligned. Note that the result layout will\n satisfy the alignment properties of both `self` and `next`.","sig":null,"attributes":[{"value":"/ Creates a layout describing the record for `self` followed by","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":9814,"byte_end":9879,"line_start":247,"line_end":247,"column_start":5,"column_end":70}},{"value":"/ `next`, including any necessary padding to ensure that `next`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":9884,"byte_end":9949,"line_start":248,"line_end":248,"column_start":5,"column_end":70}},{"value":"/ will be properly aligned. Note that the result layout will","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":9954,"byte_end":10016,"line_start":249,"line_end":249,"column_start":5,"column_end":67}},{"value":"/ satisfy the alignment properties of both `self` and `next`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":10021,"byte_end":10084,"line_start":250,"line_end":250,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":10089,"byte_end":10092,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Returns `Some((k, offset))`, where `k` is layout of the concatenated","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":10097,"byte_end":10169,"line_start":252,"line_end":252,"column_start":5,"column_end":77}},{"value":"/ record and `offset` is the relative location, in bytes, of the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":10174,"byte_end":10240,"line_start":253,"line_end":253,"column_start":5,"column_end":71}},{"value":"/ start of the `next` embedded within the concatenated record","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":10245,"byte_end":10308,"line_start":254,"line_end":254,"column_start":5,"column_end":68}},{"value":"/ (assuming that the record itself starts at offset 0).","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":10313,"byte_end":10370,"line_start":255,"line_end":255,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":10375,"byte_end":10378,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ On arithmetic overflow, returns `None`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":10383,"byte_end":10426,"line_start":257,"line_end":257,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":10431,"byte_end":10440,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11508,"byte_end":11521,"line_start":283,"line_end":283,"column_start":12,"column_end":25},"name":"repeat_packed","qualname":"<Layout>::repeat_packed","value":"pub fn repeat_packed(&Self, usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a layout describing the record for `n` instances of\n `self`, with no padding between each instance.","sig":null,"attributes":[{"value":"/ Creates a layout describing the record for `n` instances of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":10895,"byte_end":10958,"line_start":270,"line_end":270,"column_start":5,"column_end":68}},{"value":"/ `self`, with no padding between each instance.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":10963,"byte_end":11013,"line_start":271,"line_end":271,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11018,"byte_end":11021,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Note that, unlike `repeat`, `repeat_packed` does not guarantee","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11026,"byte_end":11092,"line_start":273,"line_end":273,"column_start":5,"column_end":71}},{"value":"/ that the repeated instances of `self` will be properly","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11097,"byte_end":11155,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/ aligned, even if a given instance of `self` is properly","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11160,"byte_end":11219,"line_start":275,"line_end":275,"column_start":5,"column_end":64}},{"value":"/ aligned. In other words, if the layout returned by","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11224,"byte_end":11278,"line_start":276,"line_end":276,"column_start":5,"column_end":59}},{"value":"/ `repeat_packed` is used to allocate an array, it is not","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11283,"byte_end":11342,"line_start":277,"line_end":277,"column_start":5,"column_end":64}},{"value":"/ guaranteed that all elements in the array will be properly","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11347,"byte_end":11409,"line_start":278,"line_end":278,"column_start":5,"column_end":67}},{"value":"/ aligned.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11414,"byte_end":11426,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11431,"byte_end":11434,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ On arithmetic overflow, returns `None`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11439,"byte_end":11482,"line_start":281,"line_end":281,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11487,"byte_end":11496,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12444,"byte_end":12457,"line_start":303,"line_end":303,"column_start":12,"column_end":25},"name":"extend_packed","qualname":"<Layout>::extend_packed","value":"pub fn extend_packed(&Self, Self) -> Option<(Self, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Creates a layout describing the record for `self` followed by\n `next` with no additional padding between the two. Since no\n padding is inserted, the alignment of `next` is irrelevant,\n and is not incorporated *at all* into the resulting layout.","sig":null,"attributes":[{"value":"/ Creates a layout describing the record for `self` followed by","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11647,"byte_end":11712,"line_start":287,"line_end":287,"column_start":5,"column_end":70}},{"value":"/ `next` with no additional padding between the two. Since no","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11717,"byte_end":11780,"line_start":288,"line_end":288,"column_start":5,"column_end":68}},{"value":"/ padding is inserted, the alignment of `next` is irrelevant,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11785,"byte_end":11848,"line_start":289,"line_end":289,"column_start":5,"column_end":68}},{"value":"/ and is not incorporated *at all* into the resulting layout.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11853,"byte_end":11916,"line_start":290,"line_end":290,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11921,"byte_end":11924,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Returns `(k, offset)`, where `k` is layout of the concatenated","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":11929,"byte_end":11995,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/ record and `offset` is the relative location, in bytes, of the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12000,"byte_end":12066,"line_start":293,"line_end":293,"column_start":5,"column_end":71}},{"value":"/ start of the `next` embedded within the concatenated record","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12071,"byte_end":12134,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/ (assuming that the record itself starts at offset 0).","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12139,"byte_end":12196,"line_start":295,"line_end":295,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12201,"byte_end":12204,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ (The `offset` is always the same as `self.size()`; we use this","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12209,"byte_end":12275,"line_start":297,"line_end":297,"column_start":5,"column_end":71}},{"value":"/  signature out of convenience in matching the signature of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12280,"byte_end":12342,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/  `extend`.)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12347,"byte_end":12362,"line_start":299,"line_end":299,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12367,"byte_end":12370,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ On arithmetic overflow, returns `None`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12375,"byte_end":12418,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12423,"byte_end":12432,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12799,"byte_end":12804,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"array","qualname":"<Layout>::array","value":"pub fn array<T>(usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a layout describing the record for a `[T; n]`.","sig":null,"attributes":[{"value":"/ Creates a layout describing the record for a `[T; n]`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12659,"byte_end":12717,"line_start":308,"line_end":308,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12722,"byte_end":12725,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ On arithmetic overflow, returns `None`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12730,"byte_end":12773,"line_start":310,"line_end":310,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12778,"byte_end":12787,"line_start":311,"line_end":311,"column_start":5,"column_end":14}}]},{"kind":"StructVariant","id":{"krate":0,"index":116},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13520,"byte_end":13529,"line_start":330,"line_end":330,"column_start":5,"column_end":14},"name":"Exhausted","qualname":"::AllocErr::Exhausted","value":"AllocErr::Exhausted { request }","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Error due to hitting some resource limit or otherwise running\n out of memory. This condition strongly implies that *some*\n series of deallocations would allow a subsequent reissuing of\n the original allocation request to succeed.\n","sig":null,"attributes":[{"value":"/ Error due to hitting some resource limit or otherwise running","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13261,"byte_end":13326,"line_start":326,"line_end":326,"column_start":5,"column_end":70}},{"value":"/ out of memory. This condition strongly implies that *some*","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13331,"byte_end":13393,"line_start":327,"line_end":327,"column_start":5,"column_end":67}},{"value":"/ series of deallocations would allow a subsequent reissuing of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13398,"byte_end":13463,"line_start":328,"line_end":328,"column_start":5,"column_end":70}},{"value":"/ the original allocation request to succeed.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13468,"byte_end":13515,"line_start":329,"line_end":329,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":118},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13997,"byte_end":14008,"line_start":340,"line_end":340,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::AllocErr::Unsupported","value":"AllocErr::Unsupported { details }","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Error due to allocator being fundamentally incapable of\n satisfying the original request. This condition implies that\n such an allocation request will never succeed on the given\n allocator, regardless of environment, memory pressure, or\n other contextual conditions.","sig":null,"attributes":[{"value":"/ Error due to allocator being fundamentally incapable of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13556,"byte_end":13615,"line_start":332,"line_end":332,"column_start":5,"column_end":64}},{"value":"/ satisfying the original request. This condition implies that","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13620,"byte_end":13684,"line_start":333,"line_end":333,"column_start":5,"column_end":69}},{"value":"/ such an allocation request will never succeed on the given","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13689,"byte_end":13751,"line_start":334,"line_end":334,"column_start":5,"column_end":67}},{"value":"/ allocator, regardless of environment, memory pressure, or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13756,"byte_end":13817,"line_start":335,"line_end":335,"column_start":5,"column_end":66}},{"value":"/ other contextual conditions.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13822,"byte_end":13854,"line_start":336,"line_end":336,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13859,"byte_end":13862,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ For example, an allocator that does not support requests for","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13867,"byte_end":13931,"line_start":338,"line_end":338,"column_start":5,"column_end":69}},{"value":"/ large memory blocks might return this error variant.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13936,"byte_end":13992,"line_start":339,"line_end":339,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":115},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13246,"byte_end":13254,"line_start":325,"line_end":325,"column_start":10,"column_end":18},"name":"AllocErr","qualname":"::AllocErr","value":"pub enum AllocErr {\n\n    /// Error due to hitting some resource limit or otherwise running\n    /// out of memory. This condition strongly implies that *some*\n    /// series of deallocations would allow a subsequent reissuing of\n    /// the original allocation request to succeed.\n    Exhausted {\n        request: Layout,\n    },\n\n    /// Error due to allocator being fundamentally incapable of\n    /// satisfying the original request. This condition implies that\n    /// such an allocation request will never succeed on the given\n    /// allocator, regardless of environment, memory pressure, or\n    /// other contextual conditions.\n    ///\n    /// For example, an allocator that does not support requests for\n    /// large memory blocks might return this error variant.\n    Unsupported {\n        details: &'static str,\n    },\n}","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":118}],"decl_id":null,"docs":" The `AllocErr` error specifies whether an allocation failure is\n specifically due to resource exhaustion or if it is due to\n something wrong when combining the given input arguments with this\n allocator.\n","sig":null,"attributes":[{"value":"/ The `AllocErr` error specifies whether an allocation failure is","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":12981,"byte_end":13048,"line_start":320,"line_end":320,"column_start":1,"column_end":68}},{"value":"/ specifically due to resource exhaustion or if it is due to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13049,"byte_end":13111,"line_start":321,"line_end":321,"column_start":1,"column_end":63}},{"value":"/ something wrong when combining the given input arguments with this","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13112,"byte_end":13182,"line_start":322,"line_end":322,"column_start":1,"column_end":71}},{"value":"/ allocator.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":13183,"byte_end":13197,"line_start":323,"line_end":323,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":14080,"byte_end":14093,"line_start":345,"line_end":345,"column_start":12,"column_end":25},"name":"invalid_input","qualname":"<AllocErr>::invalid_input","value":"pub fn invalid_input(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":14059,"byte_end":14068,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":14200,"byte_end":14219,"line_start":349,"line_end":349,"column_start":12,"column_end":31},"name":"is_memory_exhausted","qualname":"<AllocErr>::is_memory_exhausted","value":"pub fn is_memory_exhausted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":14179,"byte_end":14188,"line_start":348,"line_end":348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":14342,"byte_end":14364,"line_start":353,"line_end":353,"column_start":12,"column_end":34},"name":"is_request_unsupported","qualname":"<AllocErr>::is_request_unsupported","value":"pub fn is_request_unsupported(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":14321,"byte_end":14330,"line_start":352,"line_end":352,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":14489,"byte_end":14500,"line_start":357,"line_end":357,"column_start":12,"column_end":23},"name":"description","qualname":"<AllocErr>::description","value":"pub fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":14468,"byte_end":14477,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":131},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15107,"byte_end":15127,"line_start":374,"line_end":374,"column_start":12,"column_end":32},"name":"CannotReallocInPlace","qualname":"::CannotReallocInPlace","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `CannotReallocInPlace` error is used when `grow_in_place` or\n `shrink_in_place` were unable to reuse the given memory block for\n a requested layout.\n","sig":null,"attributes":[{"value":"/ The `CannotReallocInPlace` error is used when `grow_in_place` or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":14894,"byte_end":14962,"line_start":370,"line_end":370,"column_start":1,"column_end":69}},{"value":"/ `shrink_in_place` were unable to reuse the given memory block for","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":14963,"byte_end":15032,"line_start":371,"line_end":371,"column_start":1,"column_end":70}},{"value":"/ a requested layout.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15033,"byte_end":15056,"line_start":372,"line_end":372,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15169,"byte_end":15180,"line_start":377,"line_end":377,"column_start":12,"column_end":23},"name":"description","qualname":"<CannotReallocInPlace>::description","value":"pub fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":46},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":19620,"byte_end":19625,"line_start":471,"line_end":471,"column_start":18,"column_end":23},"name":"Alloc","qualname":"::Alloc","value":"Alloc","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68}],"decl_id":null,"docs":" An implementation of `Alloc` can allocate, reallocate, and\n deallocate arbitrary blocks of data described via `Layout`.","sig":null,"attributes":[{"value":"/ An implementation of `Alloc` can allocate, reallocate, and","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15449,"byte_end":15511,"line_start":385,"line_end":385,"column_start":1,"column_end":63}},{"value":"/ deallocate arbitrary blocks of data described via `Layout`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15512,"byte_end":15575,"line_start":386,"line_end":386,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15576,"byte_end":15579,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ Some of the methods require that a memory block be *currently","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15580,"byte_end":15645,"line_start":388,"line_end":388,"column_start":1,"column_end":66}},{"value":"/ allocated* via an allocator. This means that:","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15646,"byte_end":15695,"line_start":389,"line_end":389,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15696,"byte_end":15699,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ * the starting address for that memory block was previously","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15700,"byte_end":15763,"line_start":391,"line_end":391,"column_start":1,"column_end":64}},{"value":"/   returned by a previous call to an allocation method (`alloc`,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15764,"byte_end":15831,"line_start":392,"line_end":392,"column_start":1,"column_end":68}},{"value":"/   `alloc_zeroed`, `alloc_excess`, `alloc_one`, `alloc_array`) or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15832,"byte_end":15900,"line_start":393,"line_end":393,"column_start":1,"column_end":69}},{"value":"/   reallocation method (`realloc`, `realloc_excess`, or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15901,"byte_end":15959,"line_start":394,"line_end":394,"column_start":1,"column_end":59}},{"value":"/   `realloc_array`), and","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15960,"byte_end":15987,"line_start":395,"line_end":395,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15988,"byte_end":15991,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ * the memory block has not been subsequently deallocated, where","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15992,"byte_end":16059,"line_start":397,"line_end":397,"column_start":1,"column_end":68}},{"value":"/   blocks are deallocated either by being passed to a deallocation","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16060,"byte_end":16129,"line_start":398,"line_end":398,"column_start":1,"column_end":70}},{"value":"/   method (`dealloc`, `dealloc_one`, `dealloc_array`) or by being","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16130,"byte_end":16198,"line_start":399,"line_end":399,"column_start":1,"column_end":69}},{"value":"/   passed to a reallocation method (see above) that returns `Ok`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16199,"byte_end":16267,"line_start":400,"line_end":400,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16268,"byte_end":16271,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ A note regarding zero-sized types and zero-sized layouts: many","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16272,"byte_end":16338,"line_start":402,"line_end":402,"column_start":1,"column_end":67}},{"value":"/ methods in the `Alloc` trait state that allocation requests","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16339,"byte_end":16402,"line_start":403,"line_end":403,"column_start":1,"column_end":64}},{"value":"/ must be non-zero size, or else undefined behavior can result.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16403,"byte_end":16468,"line_start":404,"line_end":404,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16469,"byte_end":16472,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ * However, some higher-level allocation methods (`alloc_one`,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16473,"byte_end":16538,"line_start":406,"line_end":406,"column_start":1,"column_end":66}},{"value":"/   `alloc_array`) are well-defined on zero-sized types and can","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16539,"byte_end":16604,"line_start":407,"line_end":407,"column_start":1,"column_end":66}},{"value":"/   optionally support them: it is left up to the implementor","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16605,"byte_end":16668,"line_start":408,"line_end":408,"column_start":1,"column_end":64}},{"value":"/   whether to return `Err`, or to return `Ok` with some pointer.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16669,"byte_end":16736,"line_start":409,"line_end":409,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16737,"byte_end":16740,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * If an `Alloc` implementation chooses to return `Ok` in this","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16741,"byte_end":16806,"line_start":411,"line_end":411,"column_start":1,"column_end":66}},{"value":"/   case (i.e. the pointer denotes a zero-sized inaccessible block)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16807,"byte_end":16876,"line_start":412,"line_end":412,"column_start":1,"column_end":70}},{"value":"/   then that returned pointer must be considered \"currently","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16877,"byte_end":16939,"line_start":413,"line_end":413,"column_start":1,"column_end":63}},{"value":"/   allocated\". On such an allocator, *all* methods that take","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":16940,"byte_end":17003,"line_start":414,"line_end":414,"column_start":1,"column_end":64}},{"value":"/   currently-allocated pointers as inputs must accept these","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17004,"byte_end":17066,"line_start":415,"line_end":415,"column_start":1,"column_end":63}},{"value":"/   zero-sized pointers, *without* causing undefined behavior.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17067,"byte_end":17131,"line_start":416,"line_end":416,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17132,"byte_end":17135,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ * In other words, if a zero-sized pointer can flow out of an","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17136,"byte_end":17200,"line_start":418,"line_end":418,"column_start":1,"column_end":65}},{"value":"/   allocator, then that allocator must likewise accept that pointer","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17201,"byte_end":17271,"line_start":419,"line_end":419,"column_start":1,"column_end":71}},{"value":"/   flowing back into its deallocation and reallocation methods.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17272,"byte_end":17338,"line_start":420,"line_end":420,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17339,"byte_end":17342,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ Some of the methods require that a layout *fit* a memory block.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17343,"byte_end":17410,"line_start":422,"line_end":422,"column_start":1,"column_end":68}},{"value":"/ What it means for a layout to \"fit\" a memory block means (or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17411,"byte_end":17475,"line_start":423,"line_end":423,"column_start":1,"column_end":65}},{"value":"/ equivalently, for a memory block to \"fit\" a layout) is that the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17476,"byte_end":17543,"line_start":424,"line_end":424,"column_start":1,"column_end":68}},{"value":"/ following two conditions must hold:","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17544,"byte_end":17583,"line_start":425,"line_end":425,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17584,"byte_end":17587,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ 1. The block's starting address must be aligned to `layout.align()`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17588,"byte_end":17660,"line_start":427,"line_end":427,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17661,"byte_end":17664,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ 2. The block's size must fall in the range `[use_min, use_max]`, where:","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17665,"byte_end":17740,"line_start":429,"line_end":429,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17741,"byte_end":17744,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/    * `use_min` is `self.usable_size(layout).0`, and","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17745,"byte_end":17800,"line_start":431,"line_end":431,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17801,"byte_end":17804,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/    * `use_max` is the capacity that was (or would have been)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17805,"byte_end":17869,"line_start":433,"line_end":433,"column_start":1,"column_end":65}},{"value":"/      returned when (if) the block was allocated via a call to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17870,"byte_end":17935,"line_start":434,"line_end":434,"column_start":1,"column_end":66}},{"value":"/      `alloc_excess` or `realloc_excess`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17936,"byte_end":17980,"line_start":435,"line_end":435,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17981,"byte_end":17984,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ Note that:","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":17985,"byte_end":17999,"line_start":437,"line_end":437,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18000,"byte_end":18003,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/  * the size of the layout most recently used to allocate the block","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18004,"byte_end":18074,"line_start":439,"line_end":439,"column_start":1,"column_end":71}},{"value":"/    is guaranteed to be in the range `[use_min, use_max]`, and","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18075,"byte_end":18140,"line_start":440,"line_end":440,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18141,"byte_end":18144,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/  * a lower-bound on `use_max` can be safely approximated by a call to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18145,"byte_end":18218,"line_start":442,"line_end":442,"column_start":1,"column_end":74}},{"value":"/    `usable_size`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18219,"byte_end":18240,"line_start":443,"line_end":443,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18241,"byte_end":18244,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/  * if a layout `k` fits a memory block (denoted by `ptr`)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18245,"byte_end":18306,"line_start":445,"line_end":445,"column_start":1,"column_end":62}},{"value":"/    currently allocated via an allocator `a`, then it is legal to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18307,"byte_end":18375,"line_start":446,"line_end":446,"column_start":1,"column_end":69}},{"value":"/    use that layout to deallocate it, i.e. `a.dealloc(ptr, k);`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18376,"byte_end":18443,"line_start":447,"line_end":447,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18444,"byte_end":18447,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ # Unsafety","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18448,"byte_end":18462,"line_start":449,"line_end":449,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18463,"byte_end":18466,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ The `Alloc` trait is an `unsafe` trait for a number of reasons, and","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18467,"byte_end":18538,"line_start":451,"line_end":451,"column_start":1,"column_end":72}},{"value":"/ implementors must ensure that they adhere to these contracts:","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18539,"byte_end":18604,"line_start":452,"line_end":452,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18605,"byte_end":18608,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ * Pointers returned from allocation functions must point to valid memory and","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18609,"byte_end":18689,"line_start":454,"line_end":454,"column_start":1,"column_end":81}},{"value":"/   retain their validity until at least the instance of `Alloc` is dropped","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18690,"byte_end":18767,"line_start":455,"line_end":455,"column_start":1,"column_end":78}},{"value":"/   itself.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18768,"byte_end":18781,"line_start":456,"line_end":456,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18782,"byte_end":18785,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ * It's undefined behavior if global allocators unwind.  This restriction may","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18786,"byte_end":18866,"line_start":458,"line_end":458,"column_start":1,"column_end":81}},{"value":"/   be lifted in the future, but currently a panic from any of these","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18867,"byte_end":18937,"line_start":459,"line_end":459,"column_start":1,"column_end":71}},{"value":"/   functions may lead to memory unsafety. Note that as of the time of this","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":18938,"byte_end":19015,"line_start":460,"line_end":460,"column_start":1,"column_end":78}},{"value":"/   writing allocators *not* intending to be global allocators can still panic","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":19016,"byte_end":19096,"line_start":461,"line_end":461,"column_start":1,"column_end":81}},{"value":"/   in their implementation without violating memory safety.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":19097,"byte_end":19159,"line_start":462,"line_end":462,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":19160,"byte_end":19163,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ * `Layout` queries and calculations in general must be correct. Callers of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":19164,"byte_end":19242,"line_start":464,"line_end":464,"column_start":1,"column_end":79}},{"value":"/   this trait are allowed to rely on the contracts defined on each method,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":19243,"byte_end":19320,"line_start":465,"line_end":465,"column_start":1,"column_end":78}},{"value":"/   and implementors must ensure such contracts remain true.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":19321,"byte_end":19383,"line_start":466,"line_end":466,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":19384,"byte_end":19387,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ Note that this list may get tweaked over time as clarifications are made in","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":19388,"byte_end":19467,"line_start":468,"line_end":468,"column_start":1,"column_end":80}},{"value":"/ the future. Additionally global allocators may gain unique requirements for","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":19468,"byte_end":19547,"line_start":469,"line_end":469,"column_start":1,"column_end":80}},{"value":"/ how to safely implement one in the future as well.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":19548,"byte_end":19602,"line_start":470,"line_end":470,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21618,"byte_end":21623,"line_start":515,"line_end":515,"column_start":15,"column_end":20},"name":"alloc","qualname":"::Alloc::alloc","value":"pub unsafe fn alloc(&mut Self, Layout) -> Result<NonNull<u8>, AllocErr>","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Returns a pointer meeting the size and alignment guarantees of\n `layout`.","sig":null,"attributes":[{"value":"/ Returns a pointer meeting the size and alignment guarantees of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":19999,"byte_end":20065,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ `layout`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20070,"byte_end":20083,"line_start":480,"line_end":480,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20088,"byte_end":20091,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ If this method returns an `Ok(addr)`, then the `addr` returned","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20096,"byte_end":20162,"line_start":482,"line_end":482,"column_start":5,"column_end":71}},{"value":"/ will be non-null address pointing to a block of storage","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20167,"byte_end":20226,"line_start":483,"line_end":483,"column_start":5,"column_end":64}},{"value":"/ suitable for holding an instance of `layout`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20231,"byte_end":20280,"line_start":484,"line_end":484,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20285,"byte_end":20288,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ The returned block of storage may or may not have its contents","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20293,"byte_end":20359,"line_start":486,"line_end":486,"column_start":5,"column_end":71}},{"value":"/ initialized. (Extension subtraits might restrict this","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20364,"byte_end":20421,"line_start":487,"line_end":487,"column_start":5,"column_end":62}},{"value":"/ behavior, e.g. to ensure initialization to particular sets of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20426,"byte_end":20491,"line_start":488,"line_end":488,"column_start":5,"column_end":70}},{"value":"/ bit patterns.)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20496,"byte_end":20514,"line_start":489,"line_end":489,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20519,"byte_end":20522,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20527,"byte_end":20539,"line_start":491,"line_end":491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20544,"byte_end":20547,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because undefined behavior can result","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20552,"byte_end":20617,"line_start":493,"line_end":493,"column_start":5,"column_end":70}},{"value":"/ if the caller does not ensure that `layout` has non-zero size.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20622,"byte_end":20688,"line_start":494,"line_end":494,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20693,"byte_end":20696,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ (Extension subtraits might provide more specific bounds on","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20701,"byte_end":20763,"line_start":496,"line_end":496,"column_start":5,"column_end":67}},{"value":"/ behavior, e.g. guarantee a sentinel address or a null pointer","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20768,"byte_end":20833,"line_start":497,"line_end":497,"column_start":5,"column_end":70}},{"value":"/ in response to a zero-size allocation request.)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20838,"byte_end":20889,"line_start":498,"line_end":498,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20894,"byte_end":20897,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20902,"byte_end":20914,"line_start":500,"line_end":500,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20919,"byte_end":20922,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Returning `Err` indicates that either memory is exhausted or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20927,"byte_end":20991,"line_start":502,"line_end":502,"column_start":5,"column_end":69}},{"value":"/ `layout` does not meet allocator's size or alignment","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":20996,"byte_end":21052,"line_start":503,"line_end":503,"column_start":5,"column_end":61}},{"value":"/ constraints.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21057,"byte_end":21073,"line_start":504,"line_end":504,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21078,"byte_end":21081,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Implementations are encouraged to return `Err` on memory","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21086,"byte_end":21146,"line_start":506,"line_end":506,"column_start":5,"column_end":65}},{"value":"/ exhaustion rather than panicking or aborting, but this is not","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21151,"byte_end":21216,"line_start":507,"line_end":507,"column_start":5,"column_end":70}},{"value":"/ a strict requirement. (Specifically: it is *legal* to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21221,"byte_end":21278,"line_start":508,"line_end":508,"column_start":5,"column_end":62}},{"value":"/ implement this trait atop an underlying native allocation","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21283,"byte_end":21344,"line_start":509,"line_end":509,"column_start":5,"column_end":66}},{"value":"/ library that aborts on memory exhaustion.)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21349,"byte_end":21395,"line_start":510,"line_end":510,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21400,"byte_end":21403,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Clients wishing to abort computation in response to an","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21408,"byte_end":21466,"line_start":512,"line_end":512,"column_start":5,"column_end":63}},{"value":"/ allocation error are encouraged to call the allocator's `oom`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21471,"byte_end":21536,"line_start":513,"line_end":513,"column_start":5,"column_end":70}},{"value":"/ method, rather than directly invoking `panic!` or similar.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21541,"byte_end":21603,"line_start":514,"line_end":514,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22263,"byte_end":22270,"line_start":532,"line_end":532,"column_start":15,"column_end":22},"name":"dealloc","qualname":"::Alloc::dealloc","value":"pub unsafe fn dealloc(&mut Self, NonNull<u8>, Layout)","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Deallocate the memory referenced by `ptr`.","sig":null,"attributes":[{"value":"/ Deallocate the memory referenced by `ptr`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21690,"byte_end":21736,"line_start":517,"line_end":517,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21741,"byte_end":21744,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21749,"byte_end":21761,"line_start":519,"line_end":519,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21766,"byte_end":21769,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because undefined behavior can result","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21774,"byte_end":21839,"line_start":521,"line_end":521,"column_start":5,"column_end":70}},{"value":"/ if the caller does not ensure all of the following:","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21844,"byte_end":21899,"line_start":522,"line_end":522,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21904,"byte_end":21907,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must denote a block of memory currently allocated via","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21912,"byte_end":21977,"line_start":524,"line_end":524,"column_start":5,"column_end":70}},{"value":"/   this allocator,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":21982,"byte_end":22003,"line_start":525,"line_end":525,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22008,"byte_end":22011,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ * `layout` must *fit* that block of memory,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22016,"byte_end":22063,"line_start":527,"line_end":527,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22068,"byte_end":22071,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ * In addition to fitting the block of memory `layout`, the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22076,"byte_end":22138,"line_start":529,"line_end":529,"column_start":5,"column_end":67}},{"value":"/   alignment of the `layout` must match the alignment used","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22143,"byte_end":22204,"line_start":530,"line_end":530,"column_start":5,"column_end":66}},{"value":"/   to allocate that block of memory.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22209,"byte_end":22248,"line_start":531,"line_end":531,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23677,"byte_end":23688,"line_start":564,"line_end":564,"column_start":8,"column_end":19},"name":"usable_size","qualname":"::Alloc::usable_size","value":"pub fn usable_size(&Self, Layout) -> (usize, usize)","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Returns bounds on the guaranteed usable size of a successful\n allocation created with the specified `layout`.","sig":null,"attributes":[{"value":"/ Returns bounds on the guaranteed usable size of a successful","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22396,"byte_end":22460,"line_start":537,"line_end":537,"column_start":5,"column_end":69}},{"value":"/ allocation created with the specified `layout`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22465,"byte_end":22516,"line_start":538,"line_end":538,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22521,"byte_end":22524,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ In particular, if one has a memory block allocated via a given","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22529,"byte_end":22595,"line_start":540,"line_end":540,"column_start":5,"column_end":71}},{"value":"/ allocator `a` and layout `k` where `a.usable_size(k)` returns","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22600,"byte_end":22665,"line_start":541,"line_end":541,"column_start":5,"column_end":70}},{"value":"/ `(l, u)`, then one can pass that block to `a.dealloc()` with a","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22670,"byte_end":22736,"line_start":542,"line_end":542,"column_start":5,"column_end":71}},{"value":"/ layout in the size range [l, u].","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22741,"byte_end":22777,"line_start":543,"line_end":543,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22782,"byte_end":22785,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ (All implementors of `usable_size` must ensure that","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22790,"byte_end":22845,"line_start":545,"line_end":545,"column_start":5,"column_end":60}},{"value":"/ `l <= k.size() <= u`)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22850,"byte_end":22875,"line_start":546,"line_end":546,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22880,"byte_end":22883,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ Both the lower- and upper-bounds (`l` and `u` respectively)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22888,"byte_end":22951,"line_start":548,"line_end":548,"column_start":5,"column_end":68}},{"value":"/ are provided, because an allocator based on size classes could","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":22956,"byte_end":23022,"line_start":549,"line_end":549,"column_start":5,"column_end":71}},{"value":"/ misbehave if one attempts to deallocate a block without","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23027,"byte_end":23086,"line_start":550,"line_end":550,"column_start":5,"column_end":64}},{"value":"/ providing a correct value for its size (i.e., one within the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23091,"byte_end":23155,"line_start":551,"line_end":551,"column_start":5,"column_end":69}},{"value":"/ range `[l, u]`).","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23160,"byte_end":23180,"line_start":552,"line_end":552,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23185,"byte_end":23188,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ Clients who wish to make use of excess capacity are encouraged","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23193,"byte_end":23259,"line_start":554,"line_end":554,"column_start":5,"column_end":71}},{"value":"/ to use the `alloc_excess` and `realloc_excess` instead, as","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23264,"byte_end":23326,"line_start":555,"line_end":555,"column_start":5,"column_end":67}},{"value":"/ this method is constrained to report conservative values that","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23331,"byte_end":23396,"line_start":556,"line_end":556,"column_start":5,"column_end":70}},{"value":"/ serve as valid bounds for *all possible* allocation method","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23401,"byte_end":23463,"line_start":557,"line_end":557,"column_start":5,"column_end":67}},{"value":"/ calls.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23468,"byte_end":23478,"line_start":558,"line_end":558,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23483,"byte_end":23486,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ However, for clients that do not wish to track the capacity","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23491,"byte_end":23554,"line_start":560,"line_end":560,"column_start":5,"column_end":68}},{"value":"/ returned by `alloc_excess` locally, this method is likely to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23559,"byte_end":23623,"line_start":561,"line_end":561,"column_start":5,"column_end":69}},{"value":"/ produce useful results.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23628,"byte_end":23655,"line_start":562,"line_end":562,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23660,"byte_end":23669,"line_start":563,"line_end":563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26828,"byte_end":26835,"line_start":632,"line_end":632,"column_start":15,"column_end":22},"name":"realloc","qualname":"::Alloc::realloc","value":"pub unsafe fn realloc(&mut Self, NonNull<u8>, Layout, usize)\n-> Result<NonNull<u8>, AllocErr>","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Returns a pointer suitable for holding data described by\n `new_layout`, meeting its size and alignment guarantees. To\n accomplish this, this may extend or shrink the allocation\n referenced by `ptr` to fit `new_layout`.","sig":null,"attributes":[{"value":"/ Returns a pointer suitable for holding data described by","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23854,"byte_end":23914,"line_start":569,"line_end":569,"column_start":5,"column_end":65}},{"value":"/ `new_layout`, meeting its size and alignment guarantees. To","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23919,"byte_end":23982,"line_start":570,"line_end":570,"column_start":5,"column_end":68}},{"value":"/ accomplish this, this may extend or shrink the allocation","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":23987,"byte_end":24048,"line_start":571,"line_end":571,"column_start":5,"column_end":66}},{"value":"/ referenced by `ptr` to fit `new_layout`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24053,"byte_end":24097,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24102,"byte_end":24105,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ If this returns `Ok`, then ownership of the memory block","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24110,"byte_end":24170,"line_start":574,"line_end":574,"column_start":5,"column_end":65}},{"value":"/ referenced by `ptr` has been transferred to this","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24175,"byte_end":24227,"line_start":575,"line_end":575,"column_start":5,"column_end":57}},{"value":"/ allocator. The memory may or may not have been freed, and","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24232,"byte_end":24293,"line_start":576,"line_end":576,"column_start":5,"column_end":66}},{"value":"/ should be considered unusable (unless of course it was","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24298,"byte_end":24356,"line_start":577,"line_end":577,"column_start":5,"column_end":63}},{"value":"/ transferred back to the caller again via the return value of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24361,"byte_end":24425,"line_start":578,"line_end":578,"column_start":5,"column_end":69}},{"value":"/ this method).","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24430,"byte_end":24447,"line_start":579,"line_end":579,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24452,"byte_end":24455,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Err`, then ownership of the memory","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24460,"byte_end":24522,"line_start":581,"line_end":581,"column_start":5,"column_end":67}},{"value":"/ block has not been transferred to this allocator, and the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24527,"byte_end":24588,"line_start":582,"line_end":582,"column_start":5,"column_end":66}},{"value":"/ contents of the memory block are unaltered.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24593,"byte_end":24640,"line_start":583,"line_end":583,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24645,"byte_end":24648,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ For best results, `new_layout` should not impose a different","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24653,"byte_end":24717,"line_start":585,"line_end":585,"column_start":5,"column_end":69}},{"value":"/ alignment constraint than `layout`. (In other words,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24722,"byte_end":24778,"line_start":586,"line_end":586,"column_start":5,"column_end":61}},{"value":"/ `new_layout.align()` should equal `layout.align()`.) However,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24783,"byte_end":24848,"line_start":587,"line_end":587,"column_start":5,"column_end":70}},{"value":"/ behavior is well-defined (though underspecified) when this","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24853,"byte_end":24915,"line_start":588,"line_end":588,"column_start":5,"column_end":67}},{"value":"/ constraint is violated; further discussion below.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24920,"byte_end":24973,"line_start":589,"line_end":589,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24978,"byte_end":24981,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":24986,"byte_end":24998,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25003,"byte_end":25006,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because undefined behavior can result","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25011,"byte_end":25076,"line_start":593,"line_end":593,"column_start":5,"column_end":70}},{"value":"/ if the caller does not ensure all of the following:","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25081,"byte_end":25136,"line_start":594,"line_end":594,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25141,"byte_end":25144,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be currently allocated via this allocator,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25149,"byte_end":25208,"line_start":596,"line_end":596,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25213,"byte_end":25216,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ * `layout` must *fit* the `ptr` (see above). (The `new_layout`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25221,"byte_end":25287,"line_start":598,"line_end":598,"column_start":5,"column_end":71}},{"value":"/   argument need not fit it.)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25292,"byte_end":25324,"line_start":599,"line_end":599,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25329,"byte_end":25332,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ * `new_layout` must have size greater than zero.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25337,"byte_end":25389,"line_start":601,"line_end":601,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25394,"byte_end":25397,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ * the alignment of `new_layout` is non-zero.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25402,"byte_end":25450,"line_start":603,"line_end":603,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25455,"byte_end":25458,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ (Extension subtraits might provide more specific bounds on","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25463,"byte_end":25525,"line_start":605,"line_end":605,"column_start":5,"column_end":67}},{"value":"/ behavior, e.g. guarantee a sentinel address or a null pointer","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25530,"byte_end":25595,"line_start":606,"line_end":606,"column_start":5,"column_end":70}},{"value":"/ in response to a zero-size allocation request.)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25600,"byte_end":25651,"line_start":607,"line_end":607,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25656,"byte_end":25659,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25664,"byte_end":25676,"line_start":609,"line_end":609,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25681,"byte_end":25684,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` only if `new_layout` does not match the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25689,"byte_end":25746,"line_start":611,"line_end":611,"column_start":5,"column_end":62}},{"value":"/ alignment of `layout`, or does not meet the allocator's size","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25751,"byte_end":25815,"line_start":612,"line_end":612,"column_start":5,"column_end":69}},{"value":"/ and alignment constraints of the allocator, or if reallocation","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25820,"byte_end":25886,"line_start":613,"line_end":613,"column_start":5,"column_end":71}},{"value":"/ otherwise fails.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25891,"byte_end":25911,"line_start":614,"line_end":614,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25916,"byte_end":25919,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ (Note the previous sentence did not say \"if and only if\" -- in","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25924,"byte_end":25990,"line_start":616,"line_end":616,"column_start":5,"column_end":71}},{"value":"/ particular, an implementation of this method *can* return `Ok`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":25995,"byte_end":26061,"line_start":617,"line_end":617,"column_start":5,"column_end":71}},{"value":"/ if `new_layout.align() != old_layout.align()`; or it can","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26066,"byte_end":26126,"line_start":618,"line_end":618,"column_start":5,"column_end":65}},{"value":"/ return `Err` in that scenario, depending on whether this","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26131,"byte_end":26191,"line_start":619,"line_end":619,"column_start":5,"column_end":65}},{"value":"/ allocator can dynamically adjust the alignment constraint for","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26196,"byte_end":26261,"line_start":620,"line_end":620,"column_start":5,"column_end":70}},{"value":"/ the block.)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26266,"byte_end":26281,"line_start":621,"line_end":621,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26286,"byte_end":26289,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ Implementations are encouraged to return `Err` on memory","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26294,"byte_end":26354,"line_start":623,"line_end":623,"column_start":5,"column_end":65}},{"value":"/ exhaustion rather than panicking or aborting, but this is not","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26359,"byte_end":26424,"line_start":624,"line_end":624,"column_start":5,"column_end":70}},{"value":"/ a strict requirement. (Specifically: it is *legal* to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26429,"byte_end":26486,"line_start":625,"line_end":625,"column_start":5,"column_end":62}},{"value":"/ implement this trait atop an underlying native allocation","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26491,"byte_end":26552,"line_start":626,"line_end":626,"column_start":5,"column_end":66}},{"value":"/ library that aborts on memory exhaustion.)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26557,"byte_end":26603,"line_start":627,"line_end":627,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26608,"byte_end":26611,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Clients wishing to abort computation in response to an","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26616,"byte_end":26674,"line_start":629,"line_end":629,"column_start":5,"column_end":63}},{"value":"/ reallocation error are encouraged to call the allocator's `oom`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26679,"byte_end":26746,"line_start":630,"line_end":630,"column_start":5,"column_end":72}},{"value":"/ method, rather than directly invoking `panic!` or similar.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":26751,"byte_end":26813,"line_start":631,"line_end":631,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28190,"byte_end":28202,"line_start":669,"line_end":669,"column_start":15,"column_end":27},"name":"alloc_zeroed","qualname":"::Alloc::alloc_zeroed","value":"pub unsafe fn alloc_zeroed(&mut Self, Layout) -> Result<NonNull<u8>, AllocErr>","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Behaves like `alloc`, but also ensures that the contents\n are set to zero before being returned.","sig":null,"attributes":[{"value":"/ Behaves like `alloc`, but also ensures that the contents","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":27539,"byte_end":27599,"line_start":652,"line_end":652,"column_start":5,"column_end":65}},{"value":"/ are set to zero before being returned.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":27604,"byte_end":27646,"line_start":653,"line_end":653,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":27651,"byte_end":27654,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":27659,"byte_end":27671,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":27676,"byte_end":27679,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe for the same reasons that `alloc` is.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":27684,"byte_end":27749,"line_start":657,"line_end":657,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":27754,"byte_end":27757,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":27762,"byte_end":27774,"line_start":659,"line_end":659,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":27779,"byte_end":27782,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ Returning `Err` indicates that either memory is exhausted or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":27787,"byte_end":27851,"line_start":661,"line_end":661,"column_start":5,"column_end":69}},{"value":"/ `layout` does not meet allocator's size or alignment","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":27856,"byte_end":27912,"line_start":662,"line_end":662,"column_start":5,"column_end":61}},{"value":"/ constraints, just as in `alloc`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":27917,"byte_end":27953,"line_start":663,"line_end":663,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":27958,"byte_end":27961,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ Clients wishing to abort computation in response to an","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":27966,"byte_end":28024,"line_start":665,"line_end":665,"column_start":5,"column_end":63}},{"value":"/ allocation error are encouraged to call the allocator's `oom`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28029,"byte_end":28094,"line_start":666,"line_end":666,"column_start":5,"column_end":70}},{"value":"/ method, rather than directly invoking `panic!` or similar.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28099,"byte_end":28161,"line_start":667,"line_end":667,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28166,"byte_end":28175,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29182,"byte_end":29194,"line_start":696,"line_end":696,"column_start":15,"column_end":27},"name":"alloc_excess","qualname":"::Alloc::alloc_excess","value":"pub unsafe fn alloc_excess(&mut Self, Layout) -> Result<Excess, AllocErr>","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Behaves like `alloc`, but also returns the whole size of\n the returned block. For some `layout` inputs, like arrays, this\n may include extra storage usable for additional data.","sig":null,"attributes":[{"value":"/ Behaves like `alloc`, but also returns the whole size of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28444,"byte_end":28504,"line_start":678,"line_end":678,"column_start":5,"column_end":65}},{"value":"/ the returned block. For some `layout` inputs, like arrays, this","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28509,"byte_end":28576,"line_start":679,"line_end":679,"column_start":5,"column_end":72}},{"value":"/ may include extra storage usable for additional data.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28581,"byte_end":28638,"line_start":680,"line_end":680,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28643,"byte_end":28646,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28651,"byte_end":28663,"line_start":682,"line_end":682,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28668,"byte_end":28671,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe for the same reasons that `alloc` is.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28676,"byte_end":28741,"line_start":684,"line_end":684,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28746,"byte_end":28749,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28754,"byte_end":28766,"line_start":686,"line_end":686,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28771,"byte_end":28774,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ Returning `Err` indicates that either memory is exhausted or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28779,"byte_end":28843,"line_start":688,"line_end":688,"column_start":5,"column_end":69}},{"value":"/ `layout` does not meet allocator's size or alignment","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28848,"byte_end":28904,"line_start":689,"line_end":689,"column_start":5,"column_end":61}},{"value":"/ constraints, just as in `alloc`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28909,"byte_end":28945,"line_start":690,"line_end":690,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28950,"byte_end":28953,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ Clients wishing to abort computation in response to an","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":28958,"byte_end":29016,"line_start":692,"line_end":692,"column_start":5,"column_end":63}},{"value":"/ allocation error are encouraged to call the allocator's `oom`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29021,"byte_end":29086,"line_start":693,"line_end":693,"column_start":5,"column_end":70}},{"value":"/ method, rather than directly invoking `panic!` or similar.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29091,"byte_end":29153,"line_start":694,"line_end":694,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29158,"byte_end":29167,"line_start":695,"line_end":695,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":30122,"byte_end":30136,"line_start":719,"line_end":719,"column_start":15,"column_end":29},"name":"realloc_excess","qualname":"::Alloc::realloc_excess","value":"pub unsafe fn realloc_excess(&mut Self, NonNull<u8>, Layout, usize)\n-> Result<Excess, AllocErr>","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Behaves like `realloc`, but also returns the whole size of\n the returned block. For some `layout` inputs, like arrays, this\n may include extra storage usable for additional data.","sig":null,"attributes":[{"value":"/ Behaves like `realloc`, but also returns the whole size of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29376,"byte_end":29438,"line_start":701,"line_end":701,"column_start":5,"column_end":67}},{"value":"/ the returned block. For some `layout` inputs, like arrays, this","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29443,"byte_end":29510,"line_start":702,"line_end":702,"column_start":5,"column_end":72}},{"value":"/ may include extra storage usable for additional data.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29515,"byte_end":29572,"line_start":703,"line_end":703,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29577,"byte_end":29580,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29585,"byte_end":29597,"line_start":705,"line_end":705,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29602,"byte_end":29605,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe for the same reasons that `realloc` is.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29610,"byte_end":29677,"line_start":707,"line_end":707,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29682,"byte_end":29685,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29690,"byte_end":29702,"line_start":709,"line_end":709,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29707,"byte_end":29710,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ Returning `Err` indicates that either memory is exhausted or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29715,"byte_end":29779,"line_start":711,"line_end":711,"column_start":5,"column_end":69}},{"value":"/ `layout` does not meet allocator's size or alignment","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29784,"byte_end":29840,"line_start":712,"line_end":712,"column_start":5,"column_end":61}},{"value":"/ constraints, just as in `realloc`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29845,"byte_end":29883,"line_start":713,"line_end":713,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29888,"byte_end":29891,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ Clients wishing to abort computation in response to an","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29896,"byte_end":29954,"line_start":715,"line_end":715,"column_start":5,"column_end":63}},{"value":"/ reallocation error are encouraged to call the allocator's `oom`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":29959,"byte_end":30026,"line_start":716,"line_end":716,"column_start":5,"column_end":72}},{"value":"/ method, rather than directly invoking `panic!` or similar.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":30031,"byte_end":30093,"line_start":717,"line_end":717,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":30098,"byte_end":30107,"line_start":718,"line_end":718,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":32484,"byte_end":32499,"line_start":770,"line_end":770,"column_start":15,"column_end":30},"name":"resize_in_place","qualname":"::Alloc::resize_in_place","value":"pub unsafe fn resize_in_place(&mut Self, NonNull<u8>, Layout, usize)\n-> Result<(), CannotReallocInPlace>","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Attempts to resize the allocation referenced by `ptr` to fit `new_layout`.","sig":null,"attributes":[{"value":"/ Attempts to resize the allocation referenced by `ptr` to fit `new_layout`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":30536,"byte_end":30614,"line_start":728,"line_end":728,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":30619,"byte_end":30622,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ If this returns `Ok`, then the allocator has asserted that the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":30627,"byte_end":30693,"line_start":730,"line_end":730,"column_start":5,"column_end":71}},{"value":"/ memory block referenced by `ptr` now fits `new_layout`, and thus can","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":30698,"byte_end":30770,"line_start":731,"line_end":731,"column_start":5,"column_end":77}},{"value":"/ be used to carry data of that layout. (The allocator is allowed to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":30775,"byte_end":30845,"line_start":732,"line_end":732,"column_start":5,"column_end":75}},{"value":"/ expend effort to accomplish this, such as extending the memory block to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":30850,"byte_end":30925,"line_start":733,"line_end":733,"column_start":5,"column_end":80}},{"value":"/ include successor blocks, or virtual memory tricks.)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":30930,"byte_end":30986,"line_start":734,"line_end":734,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":30991,"byte_end":30994,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ Regardless of what this method returns, ownership of the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":30999,"byte_end":31059,"line_start":736,"line_end":736,"column_start":5,"column_end":65}},{"value":"/ memory block referenced by `ptr` has not been transferred, and","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31064,"byte_end":31130,"line_start":737,"line_end":737,"column_start":5,"column_end":71}},{"value":"/ the contents of the memory block up to the lesser of the old and new","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31135,"byte_end":31207,"line_start":738,"line_end":738,"column_start":5,"column_end":77}},{"value":"/ sizes are unaltered.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31212,"byte_end":31236,"line_start":739,"line_end":739,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31241,"byte_end":31244,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ If this returns `Err`, then the memory block is considered to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31249,"byte_end":31314,"line_start":741,"line_end":741,"column_start":5,"column_end":70}},{"value":"/ still represent the original `layout`. None of the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31319,"byte_end":31373,"line_start":742,"line_end":742,"column_start":5,"column_end":59}},{"value":"/ block has been carved off for reuse elsewhere, ownership of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31378,"byte_end":31441,"line_start":743,"line_end":743,"column_start":5,"column_end":68}},{"value":"/ the memory block has not been transferred, and the contents of","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31446,"byte_end":31512,"line_start":744,"line_end":744,"column_start":5,"column_end":71}},{"value":"/ the memory block are unaltered.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31517,"byte_end":31552,"line_start":745,"line_end":745,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31557,"byte_end":31560,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31565,"byte_end":31577,"line_start":747,"line_end":747,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31582,"byte_end":31585,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because undefined behavior can result","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31590,"byte_end":31655,"line_start":749,"line_end":749,"column_start":5,"column_end":70}},{"value":"/ if the caller does not ensure all of the following:","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31660,"byte_end":31715,"line_start":750,"line_end":750,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31720,"byte_end":31723,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be currently allocated via this allocator,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31728,"byte_end":31787,"line_start":752,"line_end":752,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31792,"byte_end":31795,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ * `layout` must *fit* the `ptr` (see above); note the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31800,"byte_end":31857,"line_start":754,"line_end":754,"column_start":5,"column_end":62}},{"value":"/   `new_layout` argument need not fit it,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31862,"byte_end":31906,"line_start":755,"line_end":755,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31911,"byte_end":31914,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ * `new_layout.align()` must equal `layout.align()`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31919,"byte_end":31974,"line_start":757,"line_end":757,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31979,"byte_end":31982,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":31987,"byte_end":31999,"line_start":759,"line_end":759,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":32004,"byte_end":32007,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(CannotReallocInPlace)` when the allocator is","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":32012,"byte_end":32073,"line_start":761,"line_end":761,"column_start":5,"column_end":66}},{"value":"/ unable to assert that the memory block referenced by `ptr`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":32078,"byte_end":32140,"line_start":762,"line_end":762,"column_start":5,"column_end":67}},{"value":"/ could fit `layout`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":32145,"byte_end":32168,"line_start":763,"line_end":763,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":32173,"byte_end":32176,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ Note that one cannot pass `CannotReallocInPlace` to the `oom`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":32181,"byte_end":32246,"line_start":765,"line_end":765,"column_start":5,"column_end":70}},{"value":"/ method; clients are expected either to be able to recover from","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":32251,"byte_end":32317,"line_start":766,"line_end":766,"column_start":5,"column_end":71}},{"value":"/ `resize_in_place` failures without aborting, or to fall back on","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":32322,"byte_end":32389,"line_start":767,"line_end":767,"column_start":5,"column_end":72}},{"value":"/ another reallocation method before resorting to an abort.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":32394,"byte_end":32455,"line_start":768,"line_end":768,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":32460,"byte_end":32469,"line_start":769,"line_end":769,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34388,"byte_end":34397,"line_start":813,"line_end":813,"column_start":8,"column_end":17},"name":"alloc_one","qualname":"::Alloc::alloc_one","value":"pub fn alloc_one<T>(&mut Self) -> Result<Unique<T>, AllocErr>","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Allocates a block suitable for holding an instance of `T`.","sig":null,"attributes":[{"value":"/ Allocates a block suitable for holding an instance of `T`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33112,"byte_end":33174,"line_start":785,"line_end":785,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33179,"byte_end":33182,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ Captures a common usage pattern for allocators.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33187,"byte_end":33238,"line_start":787,"line_end":787,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33243,"byte_end":33246,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ The returned block is suitable for passing to the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33251,"byte_end":33304,"line_start":789,"line_end":789,"column_start":5,"column_end":58}},{"value":"/ `alloc`/`realloc` methods of this allocator.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33309,"byte_end":33357,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33362,"byte_end":33365,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ Note to implementors: If this returns `Ok(ptr)`, then `ptr`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33370,"byte_end":33433,"line_start":792,"line_end":792,"column_start":5,"column_end":68}},{"value":"/ must be considered \"currently allocated\" and must be","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33438,"byte_end":33494,"line_start":793,"line_end":793,"column_start":5,"column_end":61}},{"value":"/ acceptable input to methods such as `realloc` or `dealloc`,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33499,"byte_end":33562,"line_start":794,"line_end":794,"column_start":5,"column_end":68}},{"value":"/ *even if* `T` is a zero-sized type. In other words, if your","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33567,"byte_end":33630,"line_start":795,"line_end":795,"column_start":5,"column_end":68}},{"value":"/ `Alloc` implementation overrides this method in a manner","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33635,"byte_end":33695,"line_start":796,"line_end":796,"column_start":5,"column_end":65}},{"value":"/ that can return a zero-sized `ptr`, then all reallocation and","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33700,"byte_end":33765,"line_start":797,"line_end":797,"column_start":5,"column_end":70}},{"value":"/ deallocation methods need to be similarly overridden to accept","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33770,"byte_end":33836,"line_start":798,"line_end":798,"column_start":5,"column_end":71}},{"value":"/ such values as input.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33841,"byte_end":33866,"line_start":799,"line_end":799,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33871,"byte_end":33874,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33879,"byte_end":33891,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33896,"byte_end":33899,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Returning `Err` indicates that either memory is exhausted or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33904,"byte_end":33968,"line_start":803,"line_end":803,"column_start":5,"column_end":69}},{"value":"/ `T` does not meet allocator's size or alignment constraints.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":33973,"byte_end":34037,"line_start":804,"line_end":804,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34042,"byte_end":34045,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ For zero-sized `T`, may return either of `Ok` or `Err`, but","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34050,"byte_end":34113,"line_start":806,"line_end":806,"column_start":5,"column_end":68}},{"value":"/ will *not* yield undefined behavior.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34118,"byte_end":34158,"line_start":807,"line_end":807,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34163,"byte_end":34166,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ Clients wishing to abort computation in response to an","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34171,"byte_end":34229,"line_start":809,"line_end":809,"column_start":5,"column_end":63}},{"value":"/ allocation error are encouraged to call the allocator's `oom`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34234,"byte_end":34299,"line_start":810,"line_end":810,"column_start":5,"column_end":70}},{"value":"/ method, rather than directly invoking `panic!` or similar.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34304,"byte_end":34366,"line_start":811,"line_end":811,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34371,"byte_end":34380,"line_start":812,"line_end":812,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35391,"byte_end":35402,"line_start":840,"line_end":840,"column_start":15,"column_end":26},"name":"dealloc_one","qualname":"::Alloc::dealloc_one","value":"pub unsafe fn dealloc_one<T>(&mut Self, Unique<T>)","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Deallocates a block suitable for holding an instance of `T`.","sig":null,"attributes":[{"value":"/ Deallocates a block suitable for holding an instance of `T`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34689,"byte_end":34753,"line_start":822,"line_end":822,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34758,"byte_end":34761,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ The given block must have been produced by this allocator,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34766,"byte_end":34828,"line_start":824,"line_end":824,"column_start":5,"column_end":67}},{"value":"/ and must be suitable for storing a `T` (in terms of alignment","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34833,"byte_end":34898,"line_start":825,"line_end":825,"column_start":5,"column_end":70}},{"value":"/ as well as minimum and maximum size); otherwise yields","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34903,"byte_end":34961,"line_start":826,"line_end":826,"column_start":5,"column_end":63}},{"value":"/ undefined behavior.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34966,"byte_end":34989,"line_start":827,"line_end":827,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":34994,"byte_end":34997,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ Captures a common usage pattern for allocators.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35002,"byte_end":35053,"line_start":829,"line_end":829,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35058,"byte_end":35061,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35066,"byte_end":35078,"line_start":831,"line_end":831,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35083,"byte_end":35086,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because undefined behavior can result","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35091,"byte_end":35156,"line_start":833,"line_end":833,"column_start":5,"column_end":70}},{"value":"/ if the caller does not ensure both:","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35161,"byte_end":35200,"line_start":834,"line_end":834,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35205,"byte_end":35208,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must denote a block of memory currently allocated via this allocator","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35213,"byte_end":35293,"line_start":836,"line_end":836,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35298,"byte_end":35301,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ * the layout of `T` must *fit* that block of memory.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35306,"byte_end":35362,"line_start":838,"line_end":838,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35367,"byte_end":35376,"line_start":839,"line_end":839,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36968,"byte_end":36979,"line_start":878,"line_end":878,"column_start":8,"column_end":19},"name":"alloc_array","qualname":"::Alloc::alloc_array","value":"pub fn alloc_array<T>(&mut Self, usize)\n-> Result<(Unique<T>, usize), AllocErr>","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Allocates a block suitable for holding `n` instances of `T`.","sig":null,"attributes":[{"value":"/ Allocates a block suitable for holding `n` instances of `T`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35548,"byte_end":35612,"line_start":845,"line_end":845,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35617,"byte_end":35620,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ Captures a common usage pattern for allocators.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35625,"byte_end":35676,"line_start":847,"line_end":847,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35681,"byte_end":35684,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ Returns actual size of array allocated.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35689,"byte_end":35732,"line_start":849,"line_end":849,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35737,"byte_end":35740,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ The returned block is suitable for passing to the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35745,"byte_end":35798,"line_start":851,"line_end":851,"column_start":5,"column_end":58}},{"value":"/ `alloc`/`realloc` methods of this allocator.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35803,"byte_end":35851,"line_start":852,"line_end":852,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35856,"byte_end":35859,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ Note to implementors: If this returns `Ok(ptr)`, then `ptr`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35864,"byte_end":35927,"line_start":854,"line_end":854,"column_start":5,"column_end":68}},{"value":"/ must be considered \"currently allocated\" and must be","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35932,"byte_end":35988,"line_start":855,"line_end":855,"column_start":5,"column_end":61}},{"value":"/ acceptable input to methods such as `realloc` or `dealloc`,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":35993,"byte_end":36056,"line_start":856,"line_end":856,"column_start":5,"column_end":68}},{"value":"/ *even if* `T` is a zero-sized type. In other words, if your","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36061,"byte_end":36124,"line_start":857,"line_end":857,"column_start":5,"column_end":68}},{"value":"/ `Alloc` implementation overrides this method in a manner","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36129,"byte_end":36189,"line_start":858,"line_end":858,"column_start":5,"column_end":65}},{"value":"/ that can return a zero-sized `ptr`, then all reallocation and","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36194,"byte_end":36259,"line_start":859,"line_end":859,"column_start":5,"column_end":70}},{"value":"/ deallocation methods need to be similarly overridden to accept","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36264,"byte_end":36330,"line_start":860,"line_end":860,"column_start":5,"column_end":71}},{"value":"/ such values as input.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36335,"byte_end":36360,"line_start":861,"line_end":861,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36365,"byte_end":36368,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36373,"byte_end":36385,"line_start":863,"line_end":863,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36390,"byte_end":36393,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ Returning `Err` indicates that either memory is exhausted or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36398,"byte_end":36462,"line_start":865,"line_end":865,"column_start":5,"column_end":69}},{"value":"/ `[T; n]` does not meet allocator's size or alignment","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36467,"byte_end":36523,"line_start":866,"line_end":866,"column_start":5,"column_end":61}},{"value":"/ constraints.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36528,"byte_end":36544,"line_start":867,"line_end":867,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36549,"byte_end":36552,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ For zero-sized `T` or `n == 0`, may return either of `Ok` or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36557,"byte_end":36621,"line_start":869,"line_end":869,"column_start":5,"column_end":69}},{"value":"/ `Err`, but will *not* yield undefined behavior.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36626,"byte_end":36677,"line_start":870,"line_end":870,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36682,"byte_end":36685,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ Always returns `Err` on arithmetic overflow.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36690,"byte_end":36738,"line_start":872,"line_end":872,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36743,"byte_end":36746,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ Clients wishing to abort computation in response to an","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36751,"byte_end":36809,"line_start":874,"line_end":874,"column_start":5,"column_end":63}},{"value":"/ allocation error are encouraged to call the allocator's `oom`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36814,"byte_end":36879,"line_start":875,"line_end":875,"column_start":5,"column_end":70}},{"value":"/ method, rather than directly invoking `panic!` or similar.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36884,"byte_end":36946,"line_start":876,"line_end":876,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":36951,"byte_end":36960,"line_start":877,"line_end":877,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38740,"byte_end":38753,"line_start":923,"line_end":923,"column_start":15,"column_end":28},"name":"realloc_array","qualname":"::Alloc::realloc_array","value":"pub unsafe fn realloc_array<T>(&mut Self, Unique<T>, usize, usize)\n-> Result<(Unique<T>, usize), AllocErr>","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Reallocates a block previously suitable for holding `n_old`\n instances of `T`, returning a block suitable for holding\n `n_new` instances of `T`.","sig":null,"attributes":[{"value":"/ Reallocates a block previously suitable for holding `n_old`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37401,"byte_end":37464,"line_start":888,"line_end":888,"column_start":5,"column_end":68}},{"value":"/ instances of `T`, returning a block suitable for holding","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37469,"byte_end":37529,"line_start":889,"line_end":889,"column_start":5,"column_end":65}},{"value":"/ `n_new` instances of `T`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37534,"byte_end":37563,"line_start":890,"line_end":890,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37568,"byte_end":37571,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ Captures a common usage pattern for allocators.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37576,"byte_end":37627,"line_start":892,"line_end":892,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37632,"byte_end":37635,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ Returns actual size of array allocated.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37640,"byte_end":37683,"line_start":894,"line_end":894,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37688,"byte_end":37691,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ The returned block is suitable for passing to the","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37696,"byte_end":37749,"line_start":896,"line_end":896,"column_start":5,"column_end":58}},{"value":"/ `alloc`/`realloc` methods of this allocator.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37754,"byte_end":37802,"line_start":897,"line_end":897,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37807,"byte_end":37810,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37815,"byte_end":37827,"line_start":899,"line_end":899,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37832,"byte_end":37835,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because undefined behavior can result","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37840,"byte_end":37905,"line_start":901,"line_end":901,"column_start":5,"column_end":70}},{"value":"/ if the caller does not ensure all of the following:","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37910,"byte_end":37965,"line_start":902,"line_end":902,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37970,"byte_end":37973,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be currently allocated via this allocator,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":37978,"byte_end":38037,"line_start":904,"line_end":904,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38042,"byte_end":38045,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ * the layout of `[T; n_old]` must *fit* that block of memory.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38050,"byte_end":38115,"line_start":906,"line_end":906,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38120,"byte_end":38123,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38128,"byte_end":38140,"line_start":908,"line_end":908,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38145,"byte_end":38148,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ Returning `Err` indicates that either memory is exhausted or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38153,"byte_end":38217,"line_start":910,"line_end":910,"column_start":5,"column_end":69}},{"value":"/ `[T; n_new]` does not meet allocator's size or alignment","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38222,"byte_end":38282,"line_start":911,"line_end":911,"column_start":5,"column_end":65}},{"value":"/ constraints.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38287,"byte_end":38303,"line_start":912,"line_end":912,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38308,"byte_end":38311,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ For zero-sized `T` or `n_new == 0`, may return either of `Ok` or","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38316,"byte_end":38384,"line_start":914,"line_end":914,"column_start":5,"column_end":73}},{"value":"/ `Err`, but will *not* yield undefined behavior.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38389,"byte_end":38440,"line_start":915,"line_end":915,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38445,"byte_end":38448,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ Always returns `Err` on arithmetic overflow.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38453,"byte_end":38501,"line_start":917,"line_end":917,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38506,"byte_end":38509,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ Clients wishing to abort computation in response to an","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38514,"byte_end":38572,"line_start":919,"line_end":919,"column_start":5,"column_end":63}},{"value":"/ reallocation error are encouraged to call the allocator's `oom`","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38577,"byte_end":38644,"line_start":920,"line_end":920,"column_start":5,"column_end":72}},{"value":"/ method, rather than directly invoking `panic!` or similar.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38649,"byte_end":38711,"line_start":921,"line_end":921,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":38716,"byte_end":38725,"line_start":922,"line_end":922,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":40202,"byte_end":40215,"line_start":960,"line_end":960,"column_start":15,"column_end":28},"name":"dealloc_array","qualname":"::Alloc::dealloc_array","value":"pub unsafe fn dealloc_array<T>(&mut Self, Unique<T>, usize)\n-> Result<(), AllocErr>","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Deallocates a block suitable for holding `n` instances of `T`.","sig":null,"attributes":[{"value":"/ Deallocates a block suitable for holding `n` instances of `T`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39481,"byte_end":39547,"line_start":939,"line_end":939,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39552,"byte_end":39555,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ Captures a common usage pattern for allocators.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39560,"byte_end":39611,"line_start":941,"line_end":941,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39616,"byte_end":39619,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39624,"byte_end":39636,"line_start":943,"line_end":943,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39641,"byte_end":39644,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because undefined behavior can result","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39649,"byte_end":39714,"line_start":945,"line_end":945,"column_start":5,"column_end":70}},{"value":"/ if the caller does not ensure both:","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39719,"byte_end":39758,"line_start":946,"line_end":946,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39763,"byte_end":39766,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must denote a block of memory currently allocated via this allocator","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39771,"byte_end":39851,"line_start":948,"line_end":948,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39856,"byte_end":39859,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ * the layout of `[T; n]` must *fit* that block of memory.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39864,"byte_end":39925,"line_start":950,"line_end":950,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39930,"byte_end":39933,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39938,"byte_end":39950,"line_start":952,"line_end":952,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39955,"byte_end":39958,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ Returning `Err` indicates that either `[T; n]` or the given","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":39963,"byte_end":40026,"line_start":954,"line_end":954,"column_start":5,"column_end":68}},{"value":"/ memory block does not meet allocator's size or alignment","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":40031,"byte_end":40091,"line_start":955,"line_end":955,"column_start":5,"column_end":65}},{"value":"/ constraints.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":40096,"byte_end":40112,"line_start":956,"line_end":956,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":40117,"byte_end":40120,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ Always returns `Err` on arithmetic overflow.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":40125,"byte_end":40173,"line_start":958,"line_end":958,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":40178,"byte_end":40187,"line_start":959,"line_end":959,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":40629,"byte_end":40642,"line_start":973,"line_end":973,"column_start":12,"column_end":25},"name":"NullAllocator","qualname":"::NullAllocator","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2128,"byte_end":2134,"line_start":59,"line_end":59,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":14044,"byte_end":14052,"line_start":343,"line_end":343,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":14783,"byte_end":14791,"line_start":366,"line_end":366,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15135,"byte_end":15155,"line_start":376,"line_end":376,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15326,"byte_end":15346,"line_start":381,"line_end":381,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":40671,"byte_end":40684,"line_start":975,"line_end":975,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":40961,"byte_end":40962,"line_start":980,"line_end":980,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":2128,"byte_end":2134,"line_start":59,"line_end":59,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":14044,"byte_end":14052,"line_start":343,"line_end":343,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":14783,"byte_end":14791,"line_start":366,"line_end":366,"column_start":23,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":115},"to":{"krate":1,"index":6288}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15135,"byte_end":15155,"line_start":376,"line_end":376,"column_start":6,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":15326,"byte_end":15346,"line_start":381,"line_end":381,"column_start":23,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":131},"to":{"krate":1,"index":6288}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":40671,"byte_end":40684,"line_start":975,"line_end":975,"column_start":23,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":143},"to":{"krate":0,"index":46}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/loca-0.7.2/src/lib.rs","byte_start":40961,"byte_end":40962,"line_start":980,"line_end":980,"column_start":67,"column_end":68},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":75},"to":{"krate":0,"index":46}}]}