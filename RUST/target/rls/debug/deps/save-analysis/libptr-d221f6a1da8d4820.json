{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2","program":"/home/silverysky/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ptr","/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=d221f6a1da8d4820","-C","extra-filename=-d221f6a1da8d4820","--out-dir","/home/silverysky/projects/homework2/target/rls/debug/deps","-L","dependency=/home/silverysky/projects/homework2/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/silverysky/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/silverysky/projects/homework2/target/rls/debug/deps/libptr-d221f6a1da8d4820.rmeta"},"prelude":{"crate_id":{"name":"ptr","disambiguator":[15109529990841961137,3674945252023435363]},"crate_root":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src","external_crates":[{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11947651413578653303,9125350549974577926]}},{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9117317158706016546,5535949425969621445]}},{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[2168407567314601696,8376855152256258116]}}],"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":472,"byte_end":8660,"line_start":11,"line_end":231,"column_start":1,"column_end":106}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":472,"byte_end":8660,"line_start":11,"line_end":231,"column_start":1,"column_end":106},"name":"","qualname":"::","value":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":95},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":43},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":78},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":472,"byte_end":482,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"feature(coerce_unsized)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":484,"byte_end":511,"line_start":13,"line_end":13,"column_start":1,"column_end":28}},{"value":"feature(const_fn)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":512,"byte_end":533,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"feature(unsize)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":534,"byte_end":553,"line_start":15,"line_end":15,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1884,"byte_end":1890,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"Unique","qualname":"::Unique","value":"Unique {  }","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16}],"decl_id":null,"docs":" A wrapper around a raw non-null `*mut T` that indicates that the possessor\n of this wrapper owns the referent. Useful for building abstractions like\n `Box<T>`, `Vec<T>`, `String`, and `HashMap<K, V>`.","sig":null,"attributes":[{"value":"/ A wrapper around a raw non-null `*mut T` that indicates that the possessor","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":688,"byte_end":766,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ of this wrapper owns the referent. Useful for building abstractions like","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":767,"byte_end":843,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ `Box<T>`, `Vec<T>`, `String`, and `HashMap<K, V>`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":844,"byte_end":898,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":899,"byte_end":902,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Unlike `*mut T`, `Unique<T>` behaves \"as if\" it were an instance of `T`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":903,"byte_end":979,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ It implements `Send`/`Sync` if `T` is `Send`/`Sync`. It also implies","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":980,"byte_end":1052,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ the kind of strong aliasing guarantees an instance of `T` can expect:","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1053,"byte_end":1126,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ the referent of the pointer should not be modified without a unique path to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1127,"byte_end":1206,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ its owning Unique.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1207,"byte_end":1229,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1230,"byte_end":1233,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If you're uncertain of whether it's correct to use `Unique` for your purposes,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1234,"byte_end":1316,"line_start":33,"line_end":33,"column_start":1,"column_end":83}},{"value":"/ consider using `Shared`, which has weaker semantics.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1317,"byte_end":1373,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1374,"byte_end":1377,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Unlike `*mut T`, the pointer must always be non-null, even if the pointer","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1378,"byte_end":1455,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ is never dereferenced. This is so that enums may use this forbidden value","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1456,"byte_end":1533,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ as a discriminant -- `Option<Unique<T>>` has the same size as `Unique<T>`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1534,"byte_end":1612,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ However the pointer may still dangle if it isn't dereferenced.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1613,"byte_end":1679,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1680,"byte_end":1683,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Unlike `*mut T`, `Unique<T>` is covariant over `T`. This should always be correct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1684,"byte_end":1769,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"/ for any type which upholds Unique's aliasing requirements.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1770,"byte_end":1832,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":1833,"byte_end":1872,"line_start":43,"line_end":43,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3146,"byte_end":3151,"line_start":78,"line_end":78,"column_start":18,"column_end":23},"name":"empty","qualname":"<Unique<T>>::empty","value":"pub const fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Unique` that is dangling, but well-aligned.","sig":null,"attributes":[{"value":"/ Creates a new `Unique` that is dangling, but well-aligned.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":2959,"byte_end":3021,"line_start":74,"line_end":74,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3026,"byte_end":3029,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This is useful for initializing types which lazily allocate, like","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3034,"byte_end":3103,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ `Vec::new` does.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3108,"byte_end":3128,"line_start":77,"line_end":77,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3393,"byte_end":3406,"line_start":89,"line_end":89,"column_start":25,"column_end":38},"name":"new_unchecked","qualname":"<Unique<T>>::new_unchecked","value":"pub const unsafe fn new_unchecked(*mut T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Unique`.","sig":null,"attributes":[{"value":"/ Creates a new `Unique`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3276,"byte_end":3303,"line_start":84,"line_end":84,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3308,"byte_end":3311,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3316,"byte_end":3328,"line_start":86,"line_end":86,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3333,"byte_end":3336,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ `ptr` must be non-null.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3341,"byte_end":3368,"line_start":88,"line_end":88,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3575,"byte_end":3578,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Unique<T>>::new","value":"pub fn new(*mut T) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Unique` if `ptr` is non-null.\n","sig":null,"attributes":[{"value":"/ Creates a new `Unique` if `ptr` is non-null.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3515,"byte_end":3563,"line_start":93,"line_end":93,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3712,"byte_end":3718,"line_start":97,"line_end":97,"column_start":18,"column_end":24},"name":"as_ptr","qualname":"<Unique<T>>::as_ptr","value":"pub const fn as_ptr(Self) -> NonNull<T>","parent":null,"children":[],"decl_id":null,"docs":" Acquires the underlying `*mut` pointer.\n","sig":null,"attributes":[{"value":"/ Acquires the underlying `*mut` pointer.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3651,"byte_end":3694,"line_start":96,"line_end":96,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4025,"byte_end":4031,"line_start":104,"line_end":104,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Unique<T>>::as_ref","value":"pub unsafe fn as_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the content.","sig":null,"attributes":[{"value":"/ Dereferences the content.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3757,"byte_end":3786,"line_start":99,"line_end":99,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3791,"byte_end":3794,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ The resulting lifetime is bound to self so this behaves \"as if\"","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3799,"byte_end":3866,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/ it were actually an instance of T that is getting borrowed. If a longer","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3871,"byte_end":3946,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ (unbound) lifetime is needed, use `&*my_ptr.ptr()`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3951,"byte_end":4006,"line_start":103,"line_end":103,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4352,"byte_end":4358,"line_start":111,"line_end":111,"column_start":19,"column_end":25},"name":"as_mut","qualname":"<Unique<T>>::as_mut","value":"pub unsafe fn as_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably dereferences the content.","sig":null,"attributes":[{"value":"/ Mutably dereferences the content.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4072,"byte_end":4109,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4114,"byte_end":4117,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ The resulting lifetime is bound to self so this behaves \"as if\"","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4122,"byte_end":4189,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/ it were actually an instance of T that is getting borrowed. If a longer","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4194,"byte_end":4269,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/ (unbound) lifetime is needed, use `&mut *my_ptr.ptr()`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4274,"byte_end":4333,"line_start":110,"line_end":110,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":50},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6151,"byte_end":6157,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"Shared","qualname":"::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" `*mut T` but non-zero and covariant.","sig":null,"attributes":[{"value":"/ `*mut T` but non-zero and covariant.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5014,"byte_end":5054,"line_start":136,"line_end":136,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5055,"byte_end":5058,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is often the correct thing to use when building data structures using","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5059,"byte_end":5137,"line_start":138,"line_end":138,"column_start":1,"column_end":79}},{"value":"/ raw pointers, but is ultimately more dangerous to use because of its additional","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5138,"byte_end":5221,"line_start":139,"line_end":139,"column_start":1,"column_end":84}},{"value":"/ properties. If you're not sure if you should use `Shared<T>`, just use `*mut T`!","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5222,"byte_end":5306,"line_start":140,"line_end":140,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5307,"byte_end":5310,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ Unlike `*mut T`, the pointer must always be non-null, even if the pointer","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5311,"byte_end":5388,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/ is never dereferenced. This is so that enums may use this forbidden value","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5389,"byte_end":5466,"line_start":143,"line_end":143,"column_start":1,"column_end":78}},{"value":"/ as a discriminant -- `Option<Shared<T>>` has the same size as `Shared<T>`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5467,"byte_end":5545,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ However the pointer may still dangle if it isn't dereferenced.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5546,"byte_end":5612,"line_start":145,"line_end":145,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5613,"byte_end":5616,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Unlike `*mut T`, `Shared<T>` is covariant over `T`. If this is incorrect","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5617,"byte_end":5693,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/ for your use case, you should include some PhantomData in your type to","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5694,"byte_end":5768,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ provide invariance, such as `PhantomData<Cell<T>>` or `PhantomData<&'a mut T>`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5769,"byte_end":5852,"line_start":149,"line_end":149,"column_start":1,"column_end":84}},{"value":"/ Usually this won't be necessary; covariance is correct for most safe abstractions,","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5853,"byte_end":5939,"line_start":150,"line_end":150,"column_start":1,"column_end":87}},{"value":"/ such as Box, Rc, Arc, Vec, and LinkedList. This is the case because they","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":5940,"byte_end":6016,"line_start":151,"line_end":151,"column_start":1,"column_end":77}},{"value":"/ provide a public API that follows the normal shared XOR mutable rules of Rust.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6017,"byte_end":6099,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6100,"byte_end":6139,"line_start":153,"line_end":153,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6413,"byte_end":6418,"line_start":163,"line_end":163,"column_start":18,"column_end":23},"name":"empty","qualname":"<Shared<T>>::empty","value":"pub const fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Shared` that is dangling, but well-aligned.","sig":null,"attributes":[{"value":"/ Creates a new `Shared` that is dangling, but well-aligned.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6226,"byte_end":6288,"line_start":159,"line_end":159,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6293,"byte_end":6296,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This is useful for initializing types which lazily allocate, like","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6301,"byte_end":6370,"line_start":161,"line_end":161,"column_start":5,"column_end":74}},{"value":"/ `Vec::new` does.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6375,"byte_end":6395,"line_start":162,"line_end":162,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6660,"byte_end":6673,"line_start":174,"line_end":174,"column_start":25,"column_end":38},"name":"new_unchecked","qualname":"<Shared<T>>::new_unchecked","value":"pub const unsafe fn new_unchecked(*mut T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Shared`.","sig":null,"attributes":[{"value":"/ Creates a new `Shared`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6543,"byte_end":6570,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6575,"byte_end":6578,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6583,"byte_end":6595,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6600,"byte_end":6603,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ `ptr` must be non-null.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6608,"byte_end":6635,"line_start":173,"line_end":173,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6806,"byte_end":6809,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<Shared<T>>::new","value":"pub fn new(*mut T) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Shared` if `ptr` is non-null.\n","sig":null,"attributes":[{"value":"/ Creates a new `Shared` if `ptr` is non-null.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6746,"byte_end":6794,"line_start":176,"line_end":176,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6943,"byte_end":6949,"line_start":180,"line_end":180,"column_start":18,"column_end":24},"name":"as_ptr","qualname":"<Shared<T>>::as_ptr","value":"pub const fn as_ptr(Self) -> NonNull<T>","parent":null,"children":[],"decl_id":null,"docs":" Acquires the underlying `*mut` pointer.\n","sig":null,"attributes":[{"value":"/ Acquires the underlying `*mut` pointer.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6882,"byte_end":6925,"line_start":179,"line_end":179,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7256,"byte_end":7262,"line_start":187,"line_end":187,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared<T>>::as_ref","value":"pub unsafe fn as_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the content.","sig":null,"attributes":[{"value":"/ Dereferences the content.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6988,"byte_end":7017,"line_start":182,"line_end":182,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7022,"byte_end":7025,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The resulting lifetime is bound to self so this behaves \"as if\"","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7030,"byte_end":7097,"line_start":184,"line_end":184,"column_start":5,"column_end":72}},{"value":"/ it were actually an instance of T that is getting borrowed. If a longer","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7102,"byte_end":7177,"line_start":185,"line_end":185,"column_start":5,"column_end":80}},{"value":"/ (unbound) lifetime is needed, use `&*my_ptr.ptr()`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7182,"byte_end":7237,"line_start":186,"line_end":186,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7587,"byte_end":7593,"line_start":194,"line_end":194,"column_start":19,"column_end":25},"name":"as_mut","qualname":"<Shared<T>>::as_mut","value":"pub unsafe fn as_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably dereferences the content.","sig":null,"attributes":[{"value":"/ Mutably dereferences the content.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7303,"byte_end":7340,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7345,"byte_end":7348,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The resulting lifetime is bound to self so this behaves \"as if\"","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7353,"byte_end":7420,"line_start":191,"line_end":191,"column_start":5,"column_end":72}},{"value":"/ it were actually an instance of T that is getting borrowed. If a longer","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7425,"byte_end":7500,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ (unbound) lifetime is needed, use `&mut *my_ptr.ptr_mut()`.","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7505,"byte_end":7568,"line_start":193,"line_end":193,"column_start":5,"column_end":68}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":2250,"byte_end":2256,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":2350,"byte_end":2356,"line_start":59,"line_end":59,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":2631,"byte_end":2637,"line_start":65,"line_end":65,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":2913,"byte_end":2919,"line_start":71,"line_end":71,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":2943,"byte_end":2949,"line_start":73,"line_end":73,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3260,"byte_end":3266,"line_start":83,"line_end":83,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4438,"byte_end":4444,"line_start":114,"line_end":114,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4598,"byte_end":4604,"line_start":120,"line_end":120,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4762,"byte_end":4768,"line_start":126,"line_end":126,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4923,"byte_end":4929,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6210,"byte_end":6216,"line_start":158,"line_end":158,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6527,"byte_end":6533,"line_start":168,"line_end":168,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7666,"byte_end":7672,"line_start":197,"line_end":197,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7766,"byte_end":7772,"line_start":202,"line_end":202,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7813,"byte_end":7819,"line_start":204,"line_end":204,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7974,"byte_end":7980,"line_start":210,"line_end":210,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":8099,"byte_end":8105,"line_start":214,"line_end":214,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":8241,"byte_end":8247,"line_start":220,"line_end":220,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":8380,"byte_end":8386,"line_start":226,"line_end":226,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":8542,"byte_end":8548,"line_start":230,"line_end":230,"column_start":94,"column_end":100},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":8648,"byte_end":8654,"line_start":231,"line_end":231,"column_start":94,"column_end":100},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":2250,"byte_end":2256,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":13},"to":{"krate":1,"index":1635}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":2350,"byte_end":2356,"line_start":59,"line_end":59,"column_start":26,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":13},"to":{"krate":1,"index":1947}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":2631,"byte_end":2637,"line_start":65,"line_end":65,"column_start":40,"column_end":46},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":13},"to":{"krate":1,"index":1937}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":2913,"byte_end":2919,"line_start":71,"line_end":71,"column_start":40,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":13},"to":{"krate":1,"index":1949}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":2943,"byte_end":2949,"line_start":73,"line_end":73,"column_start":16,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":13},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":3260,"byte_end":3266,"line_start":83,"line_end":83,"column_start":17,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":13},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4438,"byte_end":4444,"line_start":114,"line_end":114,"column_start":34,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":13},"to":{"krate":1,"index":6298}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4598,"byte_end":4604,"line_start":120,"line_end":120,"column_start":41,"column_end":47},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":13},"to":{"krate":1,"index":1855}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4762,"byte_end":4768,"line_start":126,"line_end":126,"column_start":37,"column_end":43},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":13},"to":{"krate":1,"index":1855}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":4923,"byte_end":4929,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":13},"to":{"krate":1,"index":1855}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6210,"byte_end":6216,"line_start":158,"line_end":158,"column_start":16,"column_end":22},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":50},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":6527,"byte_end":6533,"line_start":168,"line_end":168,"column_start":17,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":50},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7666,"byte_end":7672,"line_start":197,"line_end":197,"column_start":27,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":50},"to":{"krate":1,"index":1635}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7766,"byte_end":7772,"line_start":202,"line_end":202,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":50},"to":{"krate":1,"index":1947}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7813,"byte_end":7819,"line_start":204,"line_end":204,"column_start":34,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":50},"to":{"krate":1,"index":6298}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":7974,"byte_end":7980,"line_start":210,"line_end":210,"column_start":37,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":50},"to":{"krate":1,"index":1855}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":8099,"byte_end":8105,"line_start":214,"line_end":214,"column_start":41,"column_end":47},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":50},"to":{"krate":1,"index":1855}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":8241,"byte_end":8247,"line_start":220,"line_end":220,"column_start":37,"column_end":43},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":50},"to":{"krate":1,"index":1855}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":8380,"byte_end":8386,"line_start":226,"line_end":226,"column_start":38,"column_end":44},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":50},"to":{"krate":1,"index":1855}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":8542,"byte_end":8548,"line_start":230,"line_end":230,"column_start":94,"column_end":100},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":13},"to":{"krate":1,"index":2319}},{"span":{"file_name":"/home/silverysky/.cargo/registry/src/github.com-1ecc6299db9ec823/ptr-0.2.2/src/lib.rs","byte_start":8648,"byte_end":8654,"line_start":231,"line_end":231,"column_start":94,"column_end":100},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":50},"to":{"krate":1,"index":2319}}]}